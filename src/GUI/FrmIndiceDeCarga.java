/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Controladores.Conexion;
import IO.IndiceDeCarga;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Victor
 */
public class FrmIndiceDeCarga extends javax.swing.JFrame {
    
    ArrayList<IndiceDeCarga> lista = new ArrayList<IndiceDeCarga>();

    DefaultListModel modelo = new DefaultListModel();

    /**
     * Creates new form FrmIndiceDeCarga
     */
    public FrmIndiceDeCarga() {
        initComponents();
        
        cerrar();
        
        cargar();

        Iterator<IO.IndiceDeCarga> ItIndiceDeCarga = Conexion.getInstance().getIndiceDeCargas().ListIndiceDeCarga().iterator();

        while (ItIndiceDeCarga.hasNext()) {

            modelo.addElement(ItIndiceDeCarga.next());
        }
        
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTxtKgMemoria = new javax.swing.JTextField();
        jTxtIndiceMemoria = new javax.swing.JTextField();
        jBtnLimpiarMemoria = new javax.swing.JButton();
        jBtnActualizarMemoria = new javax.swing.JButton();
        jBtnGuardarEnLaTabla = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTblMemoria = new javax.swing.JTable();
        jBtnBorrarFilaMemoria = new javax.swing.JButton();
        jBtnBorrarTodoMemoria = new javax.swing.JButton();
        jBtnGuardarEnBaseDeDato = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTblBaseDeDatos = new javax.swing.JTable();
        jBtnActualizarBaseDeDatos = new javax.swing.JButton();
        jTxtKgBaseDeDatos = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jTabbedPane1.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/IndiceDeCarga.png"))); // NOI18N
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 67, -1, -1));

        jLabel4.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel4.setText("Indice De Carga Máximo Por Neumático");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(341, 24, -1, -1));

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel1.setText("Indice:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(481, 72, -1, -1));

        jLabel2.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel2.setText("Kg:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(481, 118, -1, -1));

        jTxtKgMemoria.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jTxtKgMemoria.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTxtKgMemoriaKeyTyped(evt);
            }
        });
        jPanel1.add(jTxtKgMemoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(551, 112, 152, -1));

        jTxtIndiceMemoria.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jTxtIndiceMemoria.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTxtIndiceMemoriaKeyTyped(evt);
            }
        });
        jPanel1.add(jTxtIndiceMemoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(551, 66, 152, -1));

        jBtnLimpiarMemoria.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jBtnLimpiarMemoria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Limpiar.png"))); // NOI18N
        jBtnLimpiarMemoria.setText("Limpiar campos");
        jBtnLimpiarMemoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnLimpiarMemoriaActionPerformed(evt);
            }
        });
        jPanel1.add(jBtnLimpiarMemoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(743, 81, 222, 33));

        jBtnActualizarMemoria.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jBtnActualizarMemoria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Modificar.png"))); // NOI18N
        jBtnActualizarMemoria.setText("Actualizar");
        jBtnActualizarMemoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnActualizarMemoriaActionPerformed(evt);
            }
        });
        jPanel1.add(jBtnActualizarMemoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(743, 158, 222, 33));

        jBtnGuardarEnLaTabla.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jBtnGuardarEnLaTabla.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Guardar.png"))); // NOI18N
        jBtnGuardarEnLaTabla.setText("Gardar en la tabla");
        jBtnGuardarEnLaTabla.setMaximumSize(new java.awt.Dimension(119, 25));
        jBtnGuardarEnLaTabla.setMinimumSize(new java.awt.Dimension(119, 25));
        jBtnGuardarEnLaTabla.setPreferredSize(new java.awt.Dimension(119, 25));
        jBtnGuardarEnLaTabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnGuardarEnLaTablaActionPerformed(evt);
            }
        });
        jPanel1.add(jBtnGuardarEnLaTabla, new org.netbeans.lib.awtextra.AbsoluteConstraints(481, 158, 222, 33));

        jTblMemoria.setAutoCreateRowSorter(true);
        jTblMemoria.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jTblMemoria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Indice", "Kg"
            }
        ));
        jTblMemoria.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTblMemoriaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTblMemoria);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(481, 215, 484, 100));

        jBtnBorrarFilaMemoria.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jBtnBorrarFilaMemoria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Eliminar.png"))); // NOI18N
        jBtnBorrarFilaMemoria.setText("Eliminar fila");
        jBtnBorrarFilaMemoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnBorrarFilaMemoriaActionPerformed(evt);
            }
        });
        jPanel1.add(jBtnBorrarFilaMemoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(481, 339, 222, 33));

        jBtnBorrarTodoMemoria.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jBtnBorrarTodoMemoria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Eliminar.png"))); // NOI18N
        jBtnBorrarTodoMemoria.setText("Eliminar todo");
        jBtnBorrarTodoMemoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnBorrarTodoMemoriaActionPerformed(evt);
            }
        });
        jPanel1.add(jBtnBorrarTodoMemoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(743, 339, 222, 33));

        jBtnGuardarEnBaseDeDato.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jBtnGuardarEnBaseDeDato.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Guardar.png"))); // NOI18N
        jBtnGuardarEnBaseDeDato.setText("Guardar en base de datos");
        jBtnGuardarEnBaseDeDato.setMaximumSize(new java.awt.Dimension(119, 25));
        jBtnGuardarEnBaseDeDato.setMinimumSize(new java.awt.Dimension(119, 25));
        jBtnGuardarEnBaseDeDato.setPreferredSize(new java.awt.Dimension(119, 25));
        jBtnGuardarEnBaseDeDato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnGuardarEnBaseDeDatoActionPerformed(evt);
            }
        });
        jPanel1.add(jBtnGuardarEnBaseDeDato, new org.netbeans.lib.awtextra.AbsoluteConstraints(743, 396, 222, 33));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/auto.jpg"))); // NOI18N
        jLabel5.setText("jLabel5");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1170, 610));

        jTabbedPane1.addTab("Agregar Indice De Carga", jPanel1);

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/IndiceDeCarga.png"))); // NOI18N
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 71, -1, -1));

        jLabel7.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel7.setText("Indice De Carga Máximo Por Neumático");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 20, -1, -1));

        jTblBaseDeDatos.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jTblBaseDeDatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Indice", "Kg"
            }
        ));
        jTblBaseDeDatos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTblBaseDeDatosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTblBaseDeDatos);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(481, 71, 139, 248));

        jBtnActualizarBaseDeDatos.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jBtnActualizarBaseDeDatos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Modificar.png"))); // NOI18N
        jBtnActualizarBaseDeDatos.setText("Actualizar");
        jBtnActualizarBaseDeDatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnActualizarBaseDeDatosActionPerformed(evt);
            }
        });
        jPanel2.add(jBtnActualizarBaseDeDatos, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 350, 139, 33));

        jTxtKgBaseDeDatos.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jTxtKgBaseDeDatos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTxtKgBaseDeDatosKeyTyped(evt);
            }
        });
        jPanel2.add(jTxtKgBaseDeDatos, new org.netbeans.lib.awtextra.AbsoluteConstraints(305, 354, 152, -1));

        jLabel8.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel8.setText("Kg:");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(259, 358, -1, -1));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/auto.jpg"))); // NOI18N
        jLabel9.setText("jLabel4");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1170, 610));

        jTabbedPane1.addTab("Actualizar Indice De Carga (Base De Datos)", jPanel2);

        jMenu1.setText("Archivo");
        jMenu1.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N

        jMenuItem1.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Cerrar.png"))); // NOI18N
        jMenuItem1.setText("Salir");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTxtKgMemoriaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxtKgMemoriaKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (Character.isLetter(c)) {
            evt.consume();
            getToolkit().beep();
        }
    }//GEN-LAST:event_jTxtKgMemoriaKeyTyped

    private void jTxtIndiceMemoriaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxtIndiceMemoriaKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (Character.isLetter(c)) {
            evt.consume();
            getToolkit().beep();
        }
    }//GEN-LAST:event_jTxtIndiceMemoriaKeyTyped

    private void jBtnLimpiarMemoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnLimpiarMemoriaActionPerformed
        // TODO add your handling code here:
        int limpiarCampo = JOptionPane.showConfirmDialog(this, "SEGURO QUIERE LIMPIAR LOS CAMPOS?", "LIMPIAR", JOptionPane.YES_NO_OPTION);
        if (limpiarCampo == JOptionPane.YES_OPTION) {
            iniPant();
        }
    }//GEN-LAST:event_jBtnLimpiarMemoriaActionPerformed

    private void jBtnActualizarMemoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnActualizarMemoriaActionPerformed
        // TODO add your handling code here:
        int filaSelec = jTblMemoria.getSelectedRow();
        if (filaSelec >= 0) {
            if (jTxtIndiceMemoria.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "FALTA INDICE DE CARGA", "INDICE", JOptionPane.ERROR_MESSAGE);
                jTxtIndiceMemoria.requestFocus();
            } else if (jTxtKgMemoria.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "FALTA KG", "KG", JOptionPane.ERROR_MESSAGE);
                jTxtKgMemoria.requestFocus();
            } else {

                int actualizar = JOptionPane.showConfirmDialog(this, "SEGURO QUIERE ACTUALIZAR LA FILA SELECCIONADA?", "ACTUALIZAR", JOptionPane.YES_NO_OPTION);
                if (actualizar == JOptionPane.YES_OPTION) {
                    IO.IndiceDeCarga i = (IO.IndiceDeCarga) lista.get(jTblMemoria.getSelectedRow());
                    i.setindiceCarga(jTxtIndiceMemoria.getText());
                    i.setkg(jTxtKgMemoria.getText());
                    mostrar();
                    iniPant();
                } else {
                    jTxtIndiceMemoria.requestFocus();
                    iniPant();
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "NO A SELECCIONADO NINGUNA FILA", "CONFIRMACION", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jBtnActualizarMemoriaActionPerformed

    private void jBtnGuardarEnLaTablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnGuardarEnLaTablaActionPerformed
        // TODO add your handling code here:
        if (jTxtIndiceMemoria.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "FALTA INDICE DE CARGA", "INDICE", JOptionPane.ERROR_MESSAGE);
            jTxtIndiceMemoria.requestFocus();
        } else if (jTxtKgMemoria.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "FALTA KG", "KG", JOptionPane.ERROR_MESSAGE);
            jTxtKgMemoria.requestFocus();
        } else {
            IO.IndiceDeCarga i = new IO.IndiceDeCarga();
            i.setindiceCarga(jTxtIndiceMemoria.getText());
            i.setkg(jTxtKgMemoria.getText());
            lista.add(i);
            mostrar();
            iniPant();
        }
    }//GEN-LAST:event_jBtnGuardarEnLaTablaActionPerformed

    private void jTblMemoriaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTblMemoriaMouseClicked
        // TODO add your handling code here:
        int seleccion = jTblMemoria.rowAtPoint(evt.getPoint());
        jTxtIndiceMemoria.setText(String.valueOf(jTblMemoria.getValueAt(seleccion, 0)));
        jTxtKgMemoria.setText(String.valueOf(jTblMemoria.getValueAt(seleccion, 1)));
    }//GEN-LAST:event_jTblMemoriaMouseClicked

    private void jBtnBorrarFilaMemoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnBorrarFilaMemoriaActionPerformed
        // TODO add your handling code here:
        int filaSelec = jTblMemoria.getSelectedRow();
        if (filaSelec >= 0) {
            int borrarFila = JOptionPane.showConfirmDialog(this, "SEGURO QUIERE ELIMINAR LA FILA SELECCIONADA?", "ELIMINAR", JOptionPane.YES_NO_OPTION);
            if (borrarFila == JOptionPane.YES_OPTION) {
                lista.remove(jTblMemoria.getSelectedRow());
                if (jTblMemoria.getSelectedRow() != -1) {
                    DefaultTableModel mdl = (DefaultTableModel) jTblMemoria.getModel();
                    mdl.removeRow(jTblMemoria.getSelectedRow());
                    iniPant();
                    JOptionPane.showMessageDialog(this, "FILA ELIMINADA CORRECTAMENTE", "CONFIRMACION", JOptionPane.INFORMATION_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "ELIMINACION CANCELDA");
                iniPant();
            }
        } else {
            JOptionPane.showMessageDialog(this, "NO A SELECCIONADO NINGUNA FILA");
        }
    }//GEN-LAST:event_jBtnBorrarFilaMemoriaActionPerformed

    private void jBtnBorrarTodoMemoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnBorrarTodoMemoriaActionPerformed
        // TODO add your handling code here:
        if (jTblMemoria.getRowCount() > 0) {
            int borrarTodo = JOptionPane.showConfirmDialog(this, "SEGURO QUIERE ELIMINADO TODO?", "ELIMINAR", JOptionPane.YES_NO_OPTION);
            if (borrarTodo == JOptionPane.YES_OPTION) {
                vaciadoMemoria();
                iniPant();
            }
        }
    }//GEN-LAST:event_jBtnBorrarTodoMemoriaActionPerformed

    private void jBtnGuardarEnBaseDeDatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnGuardarEnBaseDeDatoActionPerformed
        // TODO add your handling code here:
        if (jTblMemoria.getRowCount() > 0) {
            int guardar = JOptionPane.showConfirmDialog(this, "SEGURO QUIERE GUARDAR EN LA BASE DE DATOS?", "GUARDAR", JOptionPane.YES_NO_OPTION);
            if (guardar == JOptionPane.YES_OPTION) {
                for (int i = 0; i < jTblMemoria.getRowCount(); i++) {
                    IO.IndiceDeCarga idc = new IO.IndiceDeCarga();
                    idc.setindiceCarga((String) jTblMemoria.getValueAt(i, 0));
                    idc.setkg((String) jTblMemoria.getValueAt(i, 1));
                    Conexion.getInstance().guardar(idc);
                }
                JOptionPane.showMessageDialog(this, "A GUARDADO CORRECTAMENTE", "CONFIRMACION", JOptionPane.INFORMATION_MESSAGE);
                vaciadoMemoria();
                vaciadoBaseDeDato();
                Iterator<IO.IndiceDeCarga> ItIndiceDeCarga = Conexion.getInstance().getIndiceDeCargas().ListIndiceDeCarga().iterator();
                //
                while (ItIndiceDeCarga.hasNext()) {

                    modelo.addElement(ItIndiceDeCarga.next());

                }
                cargar();
            }
        } else {
            JOptionPane.showMessageDialog(this, "NO HAY DATOS EN LA TABLA", "INFORMACION", JOptionPane.INFORMATION_MESSAGE);

        }
    }//GEN-LAST:event_jBtnGuardarEnBaseDeDatoActionPerformed

    private void jTblBaseDeDatosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTblBaseDeDatosMouseClicked
        // TODO add your handling code here:
        int seleccion = jTblBaseDeDatos.rowAtPoint(evt.getPoint());
        jTxtKgBaseDeDatos.setText(String.valueOf(jTblBaseDeDatos.getValueAt(seleccion, 1)));
    }//GEN-LAST:event_jTblBaseDeDatosMouseClicked

    private void jBtnActualizarBaseDeDatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnActualizarBaseDeDatosActionPerformed

        if (jTxtKgBaseDeDatos.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "FALTA KM/H", "KM/H", JOptionPane.ERROR_MESSAGE);
            jTxtKgBaseDeDatos.requestFocus();
        } else {
            int actualizar = JOptionPane.showConfirmDialog(this, "SEGURO QUIERE ACTUALIZAR LA FILA SELECCIONADA?", "ACTUALIZAR", JOptionPane.YES_NO_OPTION);
            if (actualizar == JOptionPane.YES_OPTION) {
                IO.IndiceDeCarga i = (IO.IndiceDeCarga) modelo.get(jTblBaseDeDatos.getSelectedRow());

                i.setkg(jTxtKgBaseDeDatos.getText());
                Conexion.getInstance().getIndiceDeCargas().actualizar(i);
                modelo.remove(jTblBaseDeDatos.getSelectedRow());
                if (jTblBaseDeDatos.getRowCount() > 0) {
                    DefaultTableModel mdl = (DefaultTableModel) jTblBaseDeDatos.getModel();
                    modelo.clear();
                    mdl.setRowCount(0);
                    jTxtKgBaseDeDatos.setText("");
                    Iterator<IO.IndiceDeCarga> ItIndiceDeCarga = Conexion.getInstance().getIndiceDeCargas().ListIndiceDeCarga().iterator();
                    //
                    while (ItIndiceDeCarga.hasNext()) {

                        modelo.addElement(ItIndiceDeCarga.next());

                    }
                    cargar();
                    JOptionPane.showMessageDialog(this, "A ACTUALIZADO CORRECTAMENTE", "CONFIRMACION", JOptionPane.INFORMATION_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "ACTUALIZACION CANCELADA");
                jTxtKgBaseDeDatos.setText("");
            }
        }
    }//GEN-LAST:event_jBtnActualizarBaseDeDatosActionPerformed

    private void jTxtKgBaseDeDatosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxtKgBaseDeDatosKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (Character.isLetter(c)) {
            evt.consume();
            getToolkit().beep();
        }
    }//GEN-LAST:event_jTxtKgBaseDeDatosKeyTyped

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        if (jTblMemoria.getRowCount() < 1) {
            int cerrar = JOptionPane.showConfirmDialog(this, "SEGURO QUIERE CERRAR?", "CERRAR", JOptionPane.YES_NO_OPTION);
            if (cerrar == JOptionPane.YES_OPTION) {
                this.dispose();
            }
        } else {
            JOptionPane.showMessageDialog(this, "NO A GUARDADO EN LA BASE DE DATOS", "CONFIRMACION", JOptionPane.INFORMATION_MESSAGE);
            jBtnGuardarEnBaseDeDato.requestFocus();
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    public void mostrar() {
        String matris[][] = new String[lista.size()][2];
        for (int i = 0; i < lista.size(); i++) {
            matris[i][0] = lista.get(i).getindiceCarga();
            matris[i][1] = lista.get(i).getkg();
        }
        jTblMemoria.setModel(new javax.swing.table.DefaultTableModel(
                matris,
                new String[]{
                    "Indice", "Kg"
                }
        ));
    }

    public void cargar() {
        DefaultTableModel mdl = (DefaultTableModel) jTblBaseDeDatos.getModel();
        Iterator<IO.IndiceDeCarga> ItIndiceDeCarga = Conexion.getInstance().getIndiceDeCargas().ListIndiceDeCarga().iterator();
        while (ItIndiceDeCarga.hasNext()) {
            Object[] fila = new Object[2];
            IndiceDeCarga aux = ItIndiceDeCarga.next();
            fila[0] = aux;
            fila[1] = aux.getkg();
            mdl.addRow(fila);
        }
    }

    public void vaciadoMemoria() {
        DefaultTableModel mdl = (DefaultTableModel) jTblMemoria.getModel();
        lista.clear();
        mdl.setRowCount(0);
    }

    public void vaciadoBaseDeDato() {
        DefaultTableModel mdl = (DefaultTableModel) jTblBaseDeDatos.getModel();
        lista.clear();
        mdl.setRowCount(0);
    }
    
    public void iniPant() {
        jTxtIndiceMemoria.setText("");
        jTxtKgMemoria.setText("");
        jTxtIndiceMemoria.requestFocus();
    }
    
    public void cerrar() {
        try {
            this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
            addWindowListener(new WindowAdapter() {
                public void windowClosing(WindowEvent e) {
                    confirmarSalida();
                }
            });
            this.setVisible(true);;
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void confirmarSalida() {
        if (jTblMemoria.getRowCount() < 1) {
            int cerrar = JOptionPane.showConfirmDialog(this, "SEGURO QUIERE CERRAR?", "CERRAR", JOptionPane.YES_NO_OPTION);
            if (cerrar == JOptionPane.YES_OPTION) {
                this.dispose();
            }
        } else {
            JOptionPane.showMessageDialog(this, "NO A GUARDADO EN LA BASE DE DATOS", "CONFIRMACION", JOptionPane.INFORMATION_MESSAGE);
            jBtnGuardarEnBaseDeDato.requestFocus();
        }
    }
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(FrmIndiceDeCarga.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(FrmIndiceDeCarga.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(FrmIndiceDeCarga.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(FrmIndiceDeCarga.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new FrmIndiceDeCarga().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnActualizarBaseDeDatos;
    private javax.swing.JButton jBtnActualizarMemoria;
    private javax.swing.JButton jBtnBorrarFilaMemoria;
    private javax.swing.JButton jBtnBorrarTodoMemoria;
    private javax.swing.JButton jBtnGuardarEnBaseDeDato;
    private javax.swing.JButton jBtnGuardarEnLaTabla;
    private javax.swing.JButton jBtnLimpiarMemoria;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTblBaseDeDatos;
    private javax.swing.JTable jTblMemoria;
    private javax.swing.JTextField jTxtIndiceMemoria;
    private javax.swing.JTextField jTxtKgBaseDeDatos;
    private javax.swing.JTextField jTxtKgMemoria;
    // End of variables declaration//GEN-END:variables
}
